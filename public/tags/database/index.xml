<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database on Filipe Soares</title><link>https://filipecsoares.github.io/tags/database/</link><description>Recent content in Database on Filipe Soares</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 25 Sep 2024 16:39:51 -0300</lastBuildDate><atom:link href="https://filipecsoares.github.io/tags/database/index.xml" rel="self" type="application/rss+xml"/><item><title>Vacuum Analyze in PostgreSQL: An Essential Tool for Performance Optimization</title><link>https://filipecsoares.github.io/posts/001-vacuum-analyze/</link><pubDate>Wed, 25 Sep 2024 16:39:51 -0300</pubDate><guid>https://filipecsoares.github.io/posts/001-vacuum-analyze/</guid><description>&lt;h1 id="vacuum-analyze-in-postgresql-an-essential-tool-for-performance-optimization">Vacuum Analyze in PostgreSQL: An Essential Tool for Performance Optimization&lt;/h1>
&lt;p>&lt;code>VACUUM ANALYZE&lt;/code> is a command in PostgreSQL used to optimize database performance, particularly by removing obsolete data and updating table statistics.&lt;/p>
&lt;h2 id="understanding-vacuum-analyze">Understanding VACUUM ANALYZE&lt;/h2>
&lt;h3 id="vacuum-space-reclamation">VACUUM: Space Reclamation&lt;/h3>
&lt;p>&lt;code>VACUUM&lt;/code> is a process that reclaims space occupied by deleted or marked-for-deletion rows. When records are deleted or updated in a PostgreSQL table, the physical space they occupied is still retained by the database and can only be reused for new records after running &lt;code>VACUUM&lt;/code>. This helps prevent fragmentation and unnecessary disk space usage.&lt;/p></description></item></channel></rss>